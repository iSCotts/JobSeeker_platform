<?php

/**
 * This is the model base class for the table "tbl_review".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Review".
 *
 * Columns in table "tbl_review" available as properties of the model,
 * followed by relations of table "tbl_review" available as properties of the model.
 *
 * @property integer $id
 * @property integer $from_user_id
 * @property integer $to_user_id
 * @property integer $job_post_id
 * @property integer $quality
 * @property integer $cost
 * @property integer $expertise
 * @property integer $schedule
 * @property integer $response
 * @property integer $professionalism
 * @property string $review
 * @property double $avg
 *
 * @property JobPost $jobPost
 * @property User $fromUser
 * @property User $toUser
 */
abstract class BaseReview extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_review';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Review|Reviews', $n);
	}

	public static function representingColumn() {
		return 'review';
	}

	public function rules() {
		return array(
			array('from_user_id, to_user_id, job_post_id', 'required'),
			array('from_user_id, to_user_id, job_post_id, quality, cost, expertise, schedule, response, professionalism', 'numerical', 'integerOnly'=>true),
			array('avg', 'numerical'),
			array('review', 'safe'),
			array('quality, cost, expertise, schedule, response, professionalism, review, avg', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, from_user_id, to_user_id, job_post_id, quality, cost, expertise, schedule, response, professionalism, review, avg', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'jobPost' => array(self::BELONGS_TO, 'JobPost', 'job_post_id'),
			'fromUser' => array(self::BELONGS_TO, 'User', 'from_user_id'),
			'toUser' => array(self::BELONGS_TO, 'User', 'to_user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'from_user_id' => 'From',
			'to_user_id' => 'To',
			'job_post_id' => null,
			'quality' => Yii::t('app', 'Quality'),
			'cost' => Yii::t('app', 'Cost'),
			'expertise' => Yii::t('app', 'Expertise'),
			'schedule' => Yii::t('app', 'Schedule'),
			'response' => Yii::t('app', 'Response'),
			'professionalism' => Yii::t('app', 'Professionalism'),
			'review' => Yii::t('app', 'Review'),
			'avg' => Yii::t('app', 'Average'),
			'jobPost' => null,
			'fromUser' => null,
			'toUser' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('from_user_id', $this->from_user_id);
		$criteria->compare('to_user_id', $this->to_user_id);
		$criteria->compare('job_post_id', $this->job_post_id);
		$criteria->compare('quality', $this->quality);
		$criteria->compare('cost', $this->cost);
		$criteria->compare('expertise', $this->expertise);
		$criteria->compare('schedule', $this->schedule);
		$criteria->compare('response', $this->response);
		$criteria->compare('professionalism', $this->professionalism);
		$criteria->compare('review', $this->review, true);
		$criteria->compare('avg', $this->avg);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}