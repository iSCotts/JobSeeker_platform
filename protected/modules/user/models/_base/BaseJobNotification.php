<?php

/**
 * This is the model base class for the table "tbl_job_notification".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "JobNotification".
 *
 * Columns in table "tbl_job_notification" available as properties of the model,
 * followed by relations of table "tbl_job_notification" available as properties of the model.
 *
 * @property integer $id
 * @property string $title
 * @property string $message
 * @property integer $receiver_id
 * @property string $time_sent
 * @property integer $is_read
 * @property integer $job_post_id
 *
 * @property JobPost $jobPost
 */
abstract class BaseJobNotification extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_job_notification';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'JobNotification|JobNotifications', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('receiver_id, job_post_id', 'required'),
			array('receiver_id, is_read, job_post_id', 'numerical', 'integerOnly'=>true),
			array('title', 'length', 'max'=>45),
			array('message, time_sent', 'safe'),
			array('title, message, time_sent, is_read', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, title, message, receiver_id, time_sent, is_read, job_post_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'jobPost' => array(self::BELONGS_TO, 'JobPost', 'job_post_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'title' => Yii::t('app', 'Title'),
			'message' => Yii::t('app', 'Message'),
			'receiver_id' => Yii::t('app', 'Receiver'),
			'time_sent' => Yii::t('app', 'Time Sent'),
			'is_read' => Yii::t('app', 'Is Read'),
			'job_post_id' => null,
			'jobPost' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('message', $this->message, true);
		$criteria->compare('receiver_id', $this->receiver_id);
		$criteria->compare('time_sent', $this->time_sent, true);
		$criteria->compare('is_read', $this->is_read);
		$criteria->compare('job_post_id', $this->job_post_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}